From 20d6d3acb5b734486821d82f375c14c6883f2a26 Mon Sep 17 00:00:00 2001
From: Don Darling <don.osc2@gmail.com>
Date: Thu, 11 Mar 2010 13:56:20 -0600
Subject: [PATCH] Converted from plugins_ugly1_0_10_13.patch

---
 ext/mad/gstmad.c |   57 +++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 files changed, 54 insertions(+), 3 deletions(-)

diff --git a/ext/mad/gstmad.c b/ext/mad/gstmad.c
index 92b825d..55ee7e8 100644
--- a/ext/mad/gstmad.c
+++ b/ext/mad/gstmad.c
@@ -40,6 +40,8 @@
 #include "gstmad.h"
 #include <gst/audio/audio.h>
 
+#define ENABLE_16BIT_SUPPORT
+
 
 /* elementfactory information */
 static const GstElementDetails gst_mad_details =
@@ -66,8 +68,13 @@ GST_STATIC_PAD_TEMPLATE ("src",
     GST_STATIC_CAPS ("audio/x-raw-int, "
         "endianness = (int) " G_STRINGIFY (G_BYTE_ORDER) ", "
         "signed = (boolean) true, "
+#ifdef ENABLE_16BIT_SUPPORT
+        "width = (int) 16, "
+        "depth = (int) 16, "
+#else
         "width = (int) 32, "
         "depth = (int) 32, "
+#endif
         "rate = (int) { 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, "
         "channels = (int) [ 1, 2 ]")
     );
@@ -403,9 +410,11 @@ gst_mad_convert_src (GstPad * pad, GstFormat src_format, gint64 src_value,
   }
 
   mad = GST_MAD (GST_PAD_PARENT (pad));
-
+#ifdef ENABLE_16BIT_SUPPORT
+  bytes_per_sample = mad->channels * 2;
+#else
   bytes_per_sample = mad->channels * 4;
-
+#endif
   switch (src_format) {
     case GST_FORMAT_BYTES:
       switch (*dest_format) {
@@ -829,6 +838,19 @@ gst_mad_src_event (GstPad * pad, GstEvent * event)
 static inline gint32
 scale (mad_fixed_t sample)
 {
+#ifdef ENABLE_16BIT_SUPPORT
+  /* round */
+  sample += (1L << (MAD_F_FRACBITS - 16));
+
+  /* clip */
+  if (sample >= MAD_F_ONE)
+    sample = MAD_F_ONE - 1;
+  else if (sample < -MAD_F_ONE)
+    sample = -MAD_F_ONE;
+
+  /* quantize */
+  return sample >> (MAD_F_FRACBITS + 1 - 16);
+#else
 #if MAD_F_FRACBITS < 28
   /* round */
   sample += (1L << (28 - MAD_F_FRACBITS - 1));
@@ -847,6 +869,7 @@ scale (mad_fixed_t sample)
 
   /* convert from 29 bits to 32 bits */
   return (gint32) (sample << 3);
+#endif
 }
 
 /* do we need this function? */
@@ -1253,8 +1276,13 @@ gst_mad_check_caps_reset (GstMad * mad)
     caps = gst_caps_new_simple ("audio/x-raw-int",
         "endianness", G_TYPE_INT, G_BYTE_ORDER,
         "signed", G_TYPE_BOOLEAN, TRUE,
+#ifdef ENABLE_16BIT_SUPPORT
+        "width", G_TYPE_INT, 16,
+        "depth", G_TYPE_INT, 16,
+#else
         "width", G_TYPE_INT, 32,
         "depth", G_TYPE_INT, 32,
+#endif
         "rate", G_TYPE_INT, rate, "channels", G_TYPE_INT, nchannels, NULL);
 
     gst_pad_set_caps (mad->srcpad, caps);
@@ -1575,7 +1603,11 @@ gst_mad_chain (GstPad * pad, GstBuffer * buffer)
            to skip and send the remaining pcm samples */
 
         GstBuffer *outbuffer = NULL;
+#ifdef ENABLE_16BIT_SUPPORT
+        gint16 *outdata;
+#else
         gint32 *outdata;
+#endif
         mad_fixed_t const *left_ch, *right_ch;
 
         if (mad->need_newsegment) {
@@ -1604,10 +1636,17 @@ gst_mad_chain (GstPad * pad, GstBuffer * buffer)
         }
 
         /* will attach the caps to the buffer */
+#ifdef ENABLE_16BIT_SUPPORT
+        result =
+            gst_pad_alloc_buffer_and_set_caps (mad->srcpad, 0,
+            nsamples * mad->channels * 2, GST_PAD_CAPS (mad->srcpad),
+            &outbuffer);
+#else
         result =
             gst_pad_alloc_buffer_and_set_caps (mad->srcpad, 0,
             nsamples * mad->channels * 4, GST_PAD_CAPS (mad->srcpad),
             &outbuffer);
+#endif
         if (result != GST_FLOW_OK) {
           /* Head for the exit, dropping samples as we go */
           GST_LOG ("Skipping frame synthesis due to pad_alloc return value");
@@ -1618,8 +1657,11 @@ gst_mad_chain (GstPad * pad, GstBuffer * buffer)
         mad_synth_frame (&mad->synth, &mad->frame);
         left_ch = mad->synth.pcm.samples[0];
         right_ch = mad->synth.pcm.samples[1];
-
+#ifdef ENABLE_16BIT_SUPPORT
+        outdata = (gint16 *) GST_BUFFER_DATA (outbuffer);  
+#else
         outdata = (gint32 *) GST_BUFFER_DATA (outbuffer);
+#endif
 
         GST_DEBUG ("mad out timestamp %" GST_TIME_FORMAT " dur: %"
             GST_TIME_FORMAT, GST_TIME_ARGS (time_offset),
@@ -1635,14 +1677,23 @@ gst_mad_chain (GstPad * pad, GstBuffer * buffer)
           gint count = nsamples;
 
           while (count--) {
+#ifdef ENABLE_16BIT_SUPPORT
+            *outdata++ = scale (*left_ch++) & 0xffff;
+#else
             *outdata++ = scale (*left_ch++) & 0xffffffff;
+#endif
           }
         } else {
           gint count = nsamples;
 
           while (count--) {
+#ifdef ENABLE_16BIT_SUPPORT
+            *outdata++ = scale (*left_ch++) & 0xffff;
+            *outdata++ = scale (*right_ch++) & 0xffff;
+#else
             *outdata++ = scale (*left_ch++) & 0xffffffff;
             *outdata++ = scale (*right_ch++) & 0xffffffff;
+#endif
           }
         }
 
-- 
1.6.3.3

