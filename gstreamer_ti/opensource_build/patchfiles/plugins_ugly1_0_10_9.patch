diff -c -r orig/gst-plugins-ugly-0.10.9/ext/mad/gstmad.c gst-plugins-ugly-0.10.9/ext/mad/gstmad.c
*** orig/gst-plugins-ugly-0.10.9/ext/mad/gstmad.c	2008-08-11 16:21:43.000000000 -0500
--- gst-plugins-ugly-0.10.9/ext/mad/gstmad.c	2008-10-24 16:34:08.000000000 -0500
***************
*** 39,44 ****
--- 39,46 ----
  #include "gstmad.h"
  #include <gst/audio/audio.h>
  
+ #define ENABLE_16BIT_SUPPORT
+ 
  
  /* elementfactory information */
  static const GstElementDetails gst_mad_details =
***************
*** 65,72 ****
--- 67,79 ----
      GST_STATIC_CAPS ("audio/x-raw-int, "
          "endianness = (int) " G_STRINGIFY (G_BYTE_ORDER) ", "
          "signed = (boolean) true, "
+ #ifdef ENABLE_16BIT_SUPPORT
+         "width = (int) 16, "
+         "depth = (int) 16, "
+ #else
          "width = (int) 32, "
          "depth = (int) 32, "
+ #endif
          "rate = (int) { 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, "
          "channels = (int) [ 1, 2 ]")
      );
***************
*** 397,405 ****
    }
  
    mad = GST_MAD (GST_PAD_PARENT (pad));
! 
    bytes_per_sample = mad->channels * 4;
! 
    switch (src_format) {
      case GST_FORMAT_BYTES:
        switch (*dest_format) {
--- 404,414 ----
    }
  
    mad = GST_MAD (GST_PAD_PARENT (pad));
! #ifdef ENABLE_16BIT_SUPPORT
!   bytes_per_sample = mad->channels * 2;
! #else
    bytes_per_sample = mad->channels * 4;
! #endif
    switch (src_format) {
      case GST_FORMAT_BYTES:
        switch (*dest_format) {
***************
*** 823,828 ****
--- 832,850 ----
  static inline gint32
  scale (mad_fixed_t sample)
  {
+ #ifdef ENABLE_16BIT_SUPPORT
+   /* round */
+   sample += (1L << (MAD_F_FRACBITS - 16));
+ 
+   /* clip */
+   if (sample >= MAD_F_ONE)
+     sample = MAD_F_ONE - 1;
+   else if (sample < -MAD_F_ONE)
+     sample = -MAD_F_ONE;
+ 
+   /* quantize */
+   return sample >> (MAD_F_FRACBITS + 1 - 16);
+ #else
  #if MAD_F_FRACBITS < 28
    /* round */
    sample += (1L << (28 - MAD_F_FRACBITS - 1));
***************
*** 841,846 ****
--- 863,869 ----
  
    /* convert from 29 bits to 32 bits */
    return (gint32) (sample << 3);
+ #endif
  }
  
  /* do we need this function? */
***************
*** 1250,1257 ****
--- 1273,1285 ----
      caps = gst_caps_new_simple ("audio/x-raw-int",
          "endianness", G_TYPE_INT, G_BYTE_ORDER,
          "signed", G_TYPE_BOOLEAN, TRUE,
+ #ifdef ENABLE_16BIT_SUPPORT
+         "width", G_TYPE_INT, 16,
+         "depth", G_TYPE_INT, 16,
+ #else
          "width", G_TYPE_INT, 32,
          "depth", G_TYPE_INT, 32,
+ #endif
          "rate", G_TYPE_INT, rate, "channels", G_TYPE_INT, nchannels, NULL);
  
      gst_pad_set_caps (mad->srcpad, caps);
***************
*** 1558,1564 ****
--- 1586,1596 ----
             to skip and send the remaining pcm samples */
  
          GstBuffer *outbuffer = NULL;
+ #ifdef ENABLE_16BIT_SUPPORT
+         gint16 *outdata;
+ #else
          gint32 *outdata;
+ #endif
          mad_fixed_t const *left_ch, *right_ch;
  
          if (mad->need_newsegment) {
***************
*** 1587,1596 ****
--- 1619,1635 ----
          }
  
          /* will attach the caps to the buffer */
+ #ifdef ENABLE_16BIT_SUPPORT
+         result =
+             gst_pad_alloc_buffer_and_set_caps (mad->srcpad, 0,
+             nsamples * mad->channels * 2, GST_PAD_CAPS (mad->srcpad),
+             &outbuffer);
+ #else
          result =
              gst_pad_alloc_buffer_and_set_caps (mad->srcpad, 0,
              nsamples * mad->channels * 4, GST_PAD_CAPS (mad->srcpad),
              &outbuffer);
+ #endif
          if (result != GST_FLOW_OK) {
            /* Head for the exit, dropping samples as we go */
            GST_LOG ("Skipping frame synthesis due to pad_alloc return value");
***************
*** 1601,1608 ****
          mad_synth_frame (&mad->synth, &mad->frame);
          left_ch = mad->synth.pcm.samples[0];
          right_ch = mad->synth.pcm.samples[1];
! 
          outdata = (gint32 *) GST_BUFFER_DATA (outbuffer);
  
          GST_DEBUG ("mad out timestamp %" GST_TIME_FORMAT,
              GST_TIME_ARGS (time_offset));
--- 1640,1650 ----
          mad_synth_frame (&mad->synth, &mad->frame);
          left_ch = mad->synth.pcm.samples[0];
          right_ch = mad->synth.pcm.samples[1];
! #ifdef ENABLE_16BIT_SUPPORT
!         outdata = (gint16 *) GST_BUFFER_DATA (outbuffer);  
! #else
          outdata = (gint32 *) GST_BUFFER_DATA (outbuffer);
+ #endif
  
          GST_DEBUG ("mad out timestamp %" GST_TIME_FORMAT,
              GST_TIME_ARGS (time_offset));
***************
*** 1616,1629 ****
--- 1658,1680 ----
            gint count = nsamples;
  
            while (count--) {
+ #ifdef ENABLE_16BIT_SUPPORT
+             *outdata++ = scale (*left_ch++) & 0xffff;
+ #else
              *outdata++ = scale (*left_ch++) & 0xffffffff;
+ #endif
            }
          } else {
            gint count = nsamples;
  
            while (count--) {
+ #ifdef ENABLE_16BIT_SUPPORT
+             *outdata++ = scale (*left_ch++) & 0xffff;
+             *outdata++ = scale (*right_ch++) & 0xffff;
+ #else
              *outdata++ = scale (*left_ch++) & 0xffffffff;
              *outdata++ = scale (*right_ch++) & 0xffffffff;
+ #endif
            }
          }
  
Only in gst-plugins-ugly-0.10.9/ext/mad: gstmad.c.orig
